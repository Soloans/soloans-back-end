(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{513:function(e,t,l){"use strict";l.r(t);var a=l(17),i=l(325);l(164),l(232),l(326);class s extends i.a{constructor(...e){super(...e),Object(a.a)(this,"getFilterGraphQL",({type:e,value:t})=>({["is"===e?""+this.path:`${this.path}_${e}`]:t})),Object(a.a)(this,"getFilterLabel",({label:e})=>`${this.label} ${e.toLowerCase()}`),Object(a.a)(this,"formatFilter",({label:e,value:t})=>`${this.getFilterLabel({label:e})}: "${t}"`),Object(a.a)(this,"serialize",e=>{const t=e[this.path];return"string"!=typeof t?null:t.trim()||null}),Object(a.a)(this,"getFilterTypes",()=>[{type:"is",label:"Is exactly",getInitialValue:()=>""},{type:"not",label:"Is not exactly",getInitialValue:()=>""},{type:"gt",label:"Is after",getInitialValue:()=>""},{type:"lt",label:"Is before",getInitialValue:()=>""},{type:"gte",label:"Is after or equal to",getInitialValue:()=>""},{type:"lte",label:"Is before or equal to",getInitialValue:()=>""}])}}t.default=s}}]);